{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","index.tsx","App.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","props","addNewMovie","useState","text","setText","newMovie","setNewMovie","isEnter","setIsEnter","handleFindFilm","a","fetch","response","json","filmFromServer","Title","Plot","Poster","imdbID","isFound","Response","check","every","film","onSubmit","event","preventDefault","htmlFor","onChange","value","target","type","id","placeholder","cx","onClick","ReactDOM","render","data","setMovies","document","getElementById"],"mappings":"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","file":"static/js/main.a3c6d3af.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { FC, useState } from 'react';\nimport cx from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addNewMovie: any;\n  movies: Movie[];\n}\n\nexport const FindMovie: FC<Props> = (props) => {\n  const { addNewMovie, movies } = props;\n\n  const [text, setText] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [isEnter, setIsEnter] = useState(false);\n\n  const URL = 'http://www.omdbapi.com/?apikey=bc4ea364&t=';\n  const URL_IMDB = 'https://www.imdb.com/title/';\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setText(value);\n    setIsEnter(false);\n  };\n\n  const handleFindFilm = async () => {\n    const response = await fetch(`${URL}${text}`);\n    const filmFromServer = await response.json();\n\n    const {\n      Title: title,\n      Plot: description,\n      Poster: imgUrl,\n      imdbID: imdbId,\n      Response: isFound,\n    } = filmFromServer;\n    const movie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl: `${URL_IMDB}${imdbId}`,\n      imdbId,\n    };\n    const check = (isFound === 'True');\n\n    if (movies.every(film => film.imdbId !== imdbId) && check) {\n      setNewMovie(movie);\n\n    } else {\n      setIsEnter(true);\n    }\n  };\n\n  const addToMovies = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (newMovie === null) {\n      return;\n    }\n\n    addNewMovie(newMovie);\n    setNewMovie(null);\n    setText('');\n    setIsEnter(false);\n  };\n\n  return (\n    <>\n      <form onSubmit={addToMovies} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              onChange={handleInput}\n              value={text}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cx('input', { 'is-danger': isEnter })}\n            />\n          </div>\n\n          <p className={cx('help', { 'is-danger': isEnter })}>\n            {isEnter ? ('Can&apos;t find a movie with such a title') : (' ')}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              onClick={handleFindFilm}\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {!(newMovie)\n          ? (<p>  </p>)\n          : (<MovieCard {...newMovie} />)}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  const addNewMovie = (newMovie: Movie): any => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}